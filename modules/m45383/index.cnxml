<document xmlns="http://cnx.rice.edu/cnxml">
  <title>Conclusions and Future Work</title>
<metadata xmlns:md="http://cnx.rice.edu/mdml">
  <md:content-id>m45383</md:content-id>
  <md:title>Conclusions and Future Work</md:title>
  <md:abstract>Conclusions and future directions the project can take.</md:abstract>
  <md:uuid>4029ea50-5690-42e8-adf0-983dfd13010d</md:uuid>
</metadata>

<content>
    <section id="eip-91"><title>Conclusions</title><section id="eip-44"><title>Deconvolution Method</title><para id="eip-60">The sine-sweeping method covers more frequencies and produces a better impulse response than the balloon-popping method and the pseudo-dirac method. Both the balloon-popping and the pseudo-dirac methods are unreliable and do not seem to generate enough energy to produce an accurate impulse response. Overall, the deconvolution method seems to be overly sensitive to noise. Since the poles and zeros switch for our inverse filter, it tends to become unstable as well.</para><para id="eip-312">Furthermore, the deconvolution approach assumes an unrealistically static environment. The source of the sound changes direction and the state of the room changes with time. Even our impulse responses are highly dependent on the position of our equipment. Because of this, time-varying adaptive filtering techniques make more sense for echo cancellation in our 3-D environment. We do not recommend going further with the deconvolution method.  </para></section><section id="eip-135"><title>Adaptive Filter Method</title><para id="eip-672">The adaptive filter approach is more suitable for real-life, dynamic environments which change over time. By acquiring a desired signal, we were successfully able to characterize three different algorithms used in echo cancellation in telecommunications and simulate their applications for echo cancellation in a classroom. </para><para id="eip-474">Of all of the adaptive filter algorithms that we implemented on our signals, the NLMS algorithm had the best average error RMS, while the LMS had better perceived signal quality when we actually listened to the signals. The BLMS algorithm was less computationally complex and ran more quickly, but the result was garbled. The other two algorithms successfully cancelled out echoes while maintaining acceptable sound quality. We recommend looking further into using adaptive filtering algorithms to cancel out echo in the OEDK classroom. 
</para></section></section><section id="eip-760"><title>Future Work</title><para id="eip-526">The signals that we worked with on this project were very short--usually five to ten seconds long, so in the future we would like to work with longer signals closer to the length of the signals that we would be working with if we implemented our filters for the OEDK presentations, which are 20-45 minutes long. It is important to note that we sampled our signals at 44100 Hz. Reducing the sampling rate would make computations less demanding.</para><para id="eip-780">Adaptive filters can also be used in signal prediction. In our project, we used our adaptive filter algorithms on echoed signals with respective desired signals which were already known. It is unrealistic to expect speakers to give presentations in a separate classroom that can then be used to train filters to be used in the OEDK classroom, but we did not have the required equipment to implement in real time. In the future implementations, the adaptive filter can predict the desired signal while trying to find the corresponding filter coefficients that would produce an output as close to this desired unechoed signal as possible. This might involve placing microphones near and far from the speaker to better simulate the telecommunications setup. This method would implemented in real-time on a low-power DSP chip where the incoming signal would change continuously in time without having to record a desired signal at a separate room.   </para><para id="eip-142">In the future, we would like to implement the filters on samples with unknown desired signals and have the adaptive filter predict the desired signal while trying to find the corresponding filter coefficients that would produce an output as close to the desired signal as possible. This method would be implemented in real-time on a low-power DSP chip where our incoming signal could change spontaneously at every instance without having to record desired signal at a separate location and time.   </para></section></content>
</document>