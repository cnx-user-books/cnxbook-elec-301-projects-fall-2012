<document xmlns="http://cnx.rice.edu/cnxml">
  <title>Conclusion</title>
<metadata xmlns:md="http://cnx.rice.edu/mdml">
  <md:content-id>m45414</md:content-id>
  <md:title>Conclusion</md:title>
  <md:abstract>A brief conclusion of our project and an overview of more advanced beamforming techniques</md:abstract>
  <md:uuid>e7016942-8bd7-41f3-863e-e7ab1467ae5e</md:uuid>
</metadata>

<content>
    <section id="import-auto-id7389380">
      <title>Conclusion</title>
      <para id="import-auto-id1169577376933">Beamforming is a sizeable and complex sub-study of digital signal processing. While this module has covered the fundamentals of a basic frequency domain implementation, more sophisticated techniques certainly exist. As such, this segment will serve less as a synopsis of the previous sections and more an overview of more advanced techniques in the field. </para>
      <section id="import-auto-id1169557975423">
        <title>Synopsis</title>
        <para id="import-auto-id1169573280673">Beamforming is, at its core, the art of combining multiple omnidirectional sensors into a directional whole with superior characteristics to purpose-built directional sensors. This feat is performed by delaying the sensors’ outputs such that they constructively interfere for signals arriving from a specific direction, and may be done in either the time or frequency domain. While time domain implementations may be simpler for some array topologies, frequency-domain implementations are, by and large, much more efficient due to their ability to create fractional delays (a computationally intensive upsample-delay-downsample process in time domain). </para>
        <para id="import-auto-id1169579673413">These systems underlie many technologies that we take for granted, from synthetic aperture RADAR used for such disparate applications as weather radar and ICBM tracking, to next-generation cellular technologies seeking to improve connectivity by steering cell signals towards active cell towers. </para>
      </section>
      <section id="import-auto-id1169571941038">
        <title>Advanced Beamforming</title>
        <para id="import-auto-id1169566156685">While the basic techniques described previously yield acceptable results (particularly for our purposes), adaptive processing can be used to far increase the performance of an array. These techniques largely involve a weighting vector w which was not used in our conventional beamforming algorithm. As this weighting vector may be thought of as a windowing function applied to the spatial characteristics of the array, it is clear that careful choice of a weighting function could improve parameters of the beamformer, such as its mainlobe width. </para>
        <para id="import-auto-id1169578342409">The first method to perform this width reduction is called Minimum Variance beamforming, which can also be known as Capon’s method. This algorithm, as its name implies, seeks to find a weighting vector <emphasis effect="bold">w</emphasis> such that the expectation value of |<emphasis effect="bold">w’y</emphasis>|<sup>2</sup> is minimized. This is clearly the equivalent of minimizing the variance of the signal in zero-mean systems. Computing the value of <emphasis effect="bold">w</emphasis> depends on the propagation direction and the spatiospectral covariance of all the sensors, but the technical details of that computation are outside the scope of this summary. Upon applying this weighting vector, the mainlobe width of the array’s output will be much smaller than that generated by the conventional beamforming algorithm. </para>
        <para id="import-auto-id1169577238453">Even more advanced techniques, such as Linear Prediction, can yield even better results for the beamformer’s mainlobe width. At a high level, Linear Predication involves expressing the output of one particular sensor as a weighted linear combination of all the others. Again, the mathematical details of this method are beyond the scope of this module.</para>
        <para id="import-auto-id1169579950068">Further adaptive methods allow for the aggregation of multiple arrays to cancel interference from sidelobes. For instance, creating a secondary array to preferentially receive an offending signal from one of the main array’s sidelobes with the intent of subtracting this signal from the main array’s output. Other applications of multiple arrays include more advanced direction of arrival estimation, including triangulating separate array’s estimates to yield a direction and distance (which can be tracked over time to get a direction of motion estimate).</para>
      </section>
    </section>
  </content>
</document>